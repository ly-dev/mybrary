<?php

/**
 * Implements hook_schema().
 */
function mybrary_transaction_schema ()
{
    return _mybrary_transaction_schema_definition();
}

/**
 * Central place to define the current schema
 */
function _mybrary_transaction_schema_definition ()
{
    $schema = array();

    $schema['mybrary_transaction_head'] = array(
            'description' => t('Transaction Head'),
            'fields' => array(
                    'transaction_id' => array(
                            'description' => t('transaction id, primary key'),
                            'type' => 'serial',
                            'unsigned' => TRUE,
                            'size' => 'normal',
                            'not null' => TRUE
                    ),
                    'entity_id' => array(
                            'description' => t('nid of entity bundle item'),
                            'type' => 'int',
                            'unsigned' => TRUE,
                            'size' => 'normal',
                            'not null' => FALSE
                    ),
                    'uid_borrower' => array(
                            'description' => t(('from  transaction id, source of the relationship (item borrower)')),
                            'type' => 'int',
                            'unsigned' => TRUE,
                            'size' => 'normal',
                            'not null' => FALSE
                    ),
                    'start' => array(
                            'description' => t('start of the borrow period'),
                            'type' => 'int',
                            'unsigned' => TRUE,
                            'size' => 'normal',
                            'not null' => TRUE
                    ),
                    'end' => array(
                            'description' => t('start of the borrow period'),
                            'type' => 'int',
                            'unsigned' => TRUE,
                            'size' => 'normal',
                            'not null' => TRUE
                    ),
                    'feedback_owner' => array(
                            'description' => t('feedback from owner'),
                            'type' => 'int',
                            'unsigned' => TRUE,
                            'size' => 'normal',
                            'not null' => FALSE
                    ),
                    'feedback_borrower' => array(
                            'description' => t('feedback from borrower'),
                            'type' => 'int',
                            'unsigned' => TRUE,
                            'size' => 'normal',
                            'not null' => FALSE
                    ),
            ),
            'primary key' => array(
                    'transaction_id'
            )
    );

    $schema['mybrary_transaction_items'] = array(
            'description' => t('Transaction Items'),
            'fields' => array(
                    'instance_id' => array(
                            'description' => t('instance id, primary key'),
                            'type' => 'serial',
                            'unsigned' => TRUE,
                            'size' => 'normal',
                            'not null' => TRUE
                    ),
                    'transaction_id' => array(
                            'description' => t('transaction id'),
                            'type' => 'int',
                            'unsigned' => TRUE,
                            'size' => 'normal',
                            'not null' => FALSE
                    ),
                    'status' => array(
                            'description' => t('status of the transaction'),
                            'type' => 'int',
                            'unsigned' => TRUE,
                            'size' => 'normal',
                            'not null' => FALSE,
                            'default' => MYBRARY_TRANSACTION_STATUS_UNKNOWN
                    ),
                    'update_timestamp' => array(
                            'description' => t('timestamp of updating'),
                            'type' => 'int',
                            'unsigned' => TRUE,
                            'size' => 'normal',
                            'not null' => TRUE
                    ),
                    'text' => array(
                            'description' => t('text for messaging, feedback etc'),
                            'type' => 'blob',
                            'size' => 'big',
                            'not null' => FALSE
                    )
            ),
            'primary key' => array(
                    'instance_id'
            )
    );
    
    return $schema;
}

/**
 * Alter table mybrary_transaction_head to add borrow period.
 */
function mybrary_transaction_update_7100 ()
{
    db_add_field('mybrary_transaction_head', 'start', 
            array(
                    'description' => t('start of the borrow period'),
                    'type' => 'int',
                    'unsigned' => TRUE,
                    'size' => 'normal',
                    'not null' => TRUE
            )
    );
    db_add_field('mybrary_transaction_head', 'end',
            array(
                    'description' => t('start of the borrow period'),
                    'type' => 'int',
                    'unsigned' => TRUE,
                    'size' => 'normal',
                    'not null' => TRUE
            )
    );
}

/**
 * Alter table mybrary_transaction_head and table mybrary_transaction_head
 * to set primary key with proper type.
 */
function mybrary_transaction_update_7101 ()
{
    db_drop_primary_key('mybrary_transaction_head');
    db_change_field('mybrary_transaction_head', 'transaction_id', 'transaction_id',
            array(
                    'description' => t('transaction id, primary key'),
                    'type' => 'serial',
                    'unsigned' => TRUE,
                    'size' => 'normal',
                    'not null' => TRUE
            ),
            array(
                    'primary key' => array(
                            'transaction_id'
                    )
            )
    );
    
    db_drop_primary_key('mybrary_transaction_items');
    db_change_field('mybrary_transaction_items', 'instance_id', 'instance_id',
            array(
                    'description' => t('transaction id, primary key'),
                    'type' => 'serial',
                    'unsigned' => TRUE,
                    'size' => 'normal',
                    'not null' => TRUE
            ),
            array(
                    'primary key' => array(
                            'instance_id'
                    )
            )
    );
}

/**
 * Alter table mybrary_transaction_head
 * to drop uid_owner which is redundent
 */
function mybrary_transaction_update_7102 ()
{
    db_drop_field('mybrary_transaction_head', 'uid_owner');
}

/**
 * Alter table mybrary_transaction_head to add feedback fields.
 */
function mybrary_transaction_update_7103 ()
{
    db_add_field('mybrary_transaction_head', 'feedback_owner',
            array(
                    'description' => t('feedback from owner'),
                    'type' => 'int',
                    'unsigned' => TRUE,
                    'size' => 'normal',
                    'not null' => FALSE
            )
    );
    db_add_field('mybrary_transaction_head', 'feedback_borrower',
            array(
                    'description' => t('feedback from borrower'),
                    'type' => 'int',
                    'unsigned' => TRUE,
                    'size' => 'normal',
                    'not null' => FALSE
            )
    );
}